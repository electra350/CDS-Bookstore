## Generated mta.yaml based on template version 0.4.0
## appName = bookstore
## language=nodejs; multitenant=false
## approuter=
_schema-version: '3.1'
ID: bookstore
version: 1.0.0
description: "A simple CAP project."
parameters:
  enable-parallel-deployments: true
   
build-parameters:
  before-all:
   - builder: custom
     commands:
      - npm install --production
      - npx -p @sap/cds-dk cds build --production

modules:
 ##############    UI MODULE   ##########################
 - name: bookstore-ui
   type: html5
   path: app
   build-parameters:
      # Don't package the dependencies if you're running into EINTEGRITY issues
      ignore: ["default-env.json", "node_modules/", "package-lock.json"]
      # Suppress the calling of npm install by listing no commands
      builder: custom
      commands: []
   parameters:
     memory: 256M
     disk-quota: 256M
   properties:
      TENANT_HOST_PATTERN: '^(.*)-${space}-${app-name}.${default-domain}'
   provides:
    - name: Router_api
      properties:
         url: ${default-url}
         application: ${app-name}
   requires:
     - name: bookstore-xsuaa
     - name: srv-api
       group: destinations
       properties:
          name: srv-api
          url: ~{srv-url}
          forwardAuthToken: true 

 # --------------------- SERVER MODULE ------------------------
 - name: bookstore-srv
 # ------------------------------------------------------------
   type: nodejs
   path: gen/srv
   parameters:
     buildpack: nodejs_buildpack
   requires:
    # Resources extracted from CAP configuration
    - name: bookstore-xsuaa
    - name: bookstore-db
    - name: bookstore-sm
   properties:
     SAP_JWT_TRUST_ACL: [{"clientid":"*","identityzone":"sap-provisioning"}]
   provides:
    - name: srv-api      # required by consumers of CAP services (e.g. approuter)
      properties:
        srv-url: ${default-url}
    - name: mtx-api      # potentially required by approuter
      properties:
        mtx-url: ${default-url}

 # -------------------- SIDECAR MODULE ------------------------
 - name: bookstore-db-deployer
 # ------------------------------------------------------------
   type: hdb
   path: gen/db  
   parameters:
     buildpack: nodejs_buildpack
   requires:
    # 'hana' and 'xsuaa' resources extracted from CAP configuration
    - name: bookstore-db


resources:
 # services extracted from CAP configuration
 # 'service-plan' can be configured via 'cds.requires.<name>.vcap.plan'
# ------------------------------------------------------------
 - name: bookstore-db
# ------------------------------------------------------------
   type: com.sap.xs.hdi-container
   parameters:
     service: hana  # or 'hanatrial' on trial landscapes
     service-plan: hdi-shared
   properties:
     hdi-service-name: ${service-name}

# ------------------------------------------------------------
 - name: bookstore-sm
# ------------------------------------------------------------
   type: org.cloudfoundry.managed-service
   parameters:
     service: service-manager
     service-plan: container
   properties:
     hdi-service-name: ${service-name}


# ------------------------------------------------------------
 - name: bookstore-xsuaa
# ------------------------------------------------------------
   type: org.cloudfoundry.managed-service
   requires:
    - name: Router_api
   parameters:
     service: xsuaa
     service-plan: application 
     path: ./xs-security.json
     config:
       xsappname: bookstore-${space}    #  name + space dependency
       tenant-mode: shared


 - name: bookstore-saas
   type: org.cloudfoundry.managed-service
   requires:
      - name: bookstore-xsuaa
      - name: mtx-api 
        properties: 
           prop: ~{mtx-url} 
        parameters: 
           param: ~{mtx-url} 
   parameters:
      service: saas-registry
      service-plan: application
      config:
         xsappname: bookstore-${space}
         appName: bookstore
         displayName: bookstore
         description: A simple CAP project.
         #category: 'Category'
         appUrls:
            onSubscription: ~{mtx-api/mtx-url}/mtx/v1/provisioning/tenant/{tenantId}
            onSubscriptionAsync: false
            onUnSubscriptionAsync: false
            callbackTimeoutMillis: 300000